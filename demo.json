Token {
  type: 'heading_open',
  tag: 'h2',
  attrs: null,
  map: [ 1, 3 ],
  nesting: 1,
  level: 0,
  children: null,
  content: '',
  markup: '-',
  info: '',
  meta: null,
  block: true,
  hidden: false }
Token {
  type: 'inline',
  tag: '',
  attrs: null,
  map: [ 1, 2 ],
  nesting: 0,
  level: 1,
  children: 
   [ Token {
       type: 'text',
       tag: '',
       attrs: null,
       map: null,
       nesting: 0,
       level: 0,
       children: null,
       content: 'Single Element in a Sorted Array',
       markup: '',
       info: '',
       meta: null,
       block: false,
       hidden: false } ],
  content: 'Single Element in a Sorted Array',
  markup: '',
  info: '',
  meta: null,
  block: true,
  hidden: false }
Token {
  type: 'heading_close',
  tag: 'h2',
  attrs: null,
  map: null,
  nesting: -1,
  level: 0,
  children: null,
  content: '',
  markup: '-',
  info: '',
  meta: null,
  block: true,
  hidden: false }
Token {
  type: 'paragraph_open',
  tag: 'p',
  attrs: null,
  map: [ 5, 6 ],
  nesting: 1,
  level: 0,
  children: null,
  content: '',
  markup: '',
  info: '',
  meta: null,
  block: true,
  hidden: false }
Token {
  type: 'inline',
  tag: '',
  attrs: null,
  map: [ 5, 6 ],
  nesting: 0,
  level: 1,
  children: 
   [ Token {
       type: 'text',
       tag: '',
       attrs: null,
       map: null,
       nesting: 0,
       level: 0,
       children: null,
       content: 'Given a sorted array consisting of only integers where every element appears twice except for one element which appears once. Find this single element that appears only once.',
       markup: '',
       info: '',
       meta: null,
       block: false,
       hidden: false } ],
  content: 'Given a sorted array consisting of only integers where every element appears twice except for one element which appears once. Find this single element that appears only once.',
  markup: '',
  info: '',
  meta: null,
  block: true,
  hidden: false }
Token {
  type: 'paragraph_close',
  tag: 'p',
  attrs: null,
  map: null,
  nesting: -1,
  level: 0,
  children: null,
  content: '',
  markup: '',
  info: '',
  meta: null,
  block: true,
  hidden: false }
Token {
  type: 'paragraph_open',
  tag: 'p',
  attrs: null,
  map: [ 8, 9 ],
  nesting: 1,
  level: 0,
  children: null,
  content: '',
  markup: '',
  info: '',
  meta: null,
  block: true,
  hidden: false }
Token {
  type: 'inline',
  tag: '',
  attrs: null,
  map: [ 8, 9 ],
  nesting: 0,
  level: 1,
  children: 
   [ Token {
       type: 'text',
       tag: '',
       attrs: null,
       map: null,
       nesting: 0,
       level: 0,
       children: null,
       content: 'Example 1:',
       markup: '',
       info: '',
       meta: null,
       block: false,
       hidden: false } ],
  content: 'Example 1:',
  markup: '',
  info: '',
  meta: null,
  block: true,
  hidden: false }
Token {
  type: 'paragraph_close',
  tag: 'p',
  attrs: null,
  map: null,
  nesting: -1,
  level: 0,
  children: null,
  content: '',
  markup: '',
  info: '',
  meta: null,
  block: true,
  hidden: false }
Token {
  type: 'paragraph_open',
  tag: 'p',
  attrs: null,
  map: [ 10, 12 ],
  nesting: 1,
  level: 0,
  children: null,
  content: '',
  markup: '',
  info: '',
  meta: null,
  block: true,
  hidden: false }
Token {
  type: 'inline',
  tag: '',
  attrs: null,
  map: [ 10, 12 ],
  nesting: 0,
  level: 1,
  children: 
   [ Token {
       type: 'text',
       tag: '',
       attrs: null,
       map: null,
       nesting: 0,
       level: 0,
       children: null,
       content: 'Input: [1,1,2,3,3,4,4,8,8]',
       markup: '',
       info: '',
       meta: null,
       block: false,
       hidden: false },
     Token {
       type: 'softbreak',
       tag: 'br',
       attrs: null,
       map: null,
       nesting: 0,
       level: 0,
       children: null,
       content: '',
       markup: '',
       info: '',
       meta: null,
       block: false,
       hidden: false },
     Token {
       type: 'text',
       tag: '',
       attrs: null,
       map: null,
       nesting: 0,
       level: 0,
       children: null,
       content: 'Output: 2',
       markup: '',
       info: '',
       meta: null,
       block: false,
       hidden: false } ],
  content: 'Input: [1,1,2,3,3,4,4,8,8]\nOutput: 2',
  markup: '',
  info: '',
  meta: null,
  block: true,
  hidden: false }
Token {
  type: 'paragraph_close',
  tag: 'p',
  attrs: null,
  map: null,
  nesting: -1,
  level: 0,
  children: null,
  content: '',
  markup: '',
  info: '',
  meta: null,
  block: true,
  hidden: false }
Token {
  type: 'paragraph_open',
  tag: 'p',
  attrs: null,
  map: [ 15, 16 ],
  nesting: 1,
  level: 0,
  children: null,
  content: '',
  markup: '',
  info: '',
  meta: null,
  block: true,
  hidden: false }
Token {
  type: 'inline',
  tag: '',
  attrs: null,
  map: [ 15, 16 ],
  nesting: 0,
  level: 1,
  children: 
   [ Token {
       type: 'text',
       tag: '',
       attrs: null,
       map: null,
       nesting: 0,
       level: 0,
       children: null,
       content: 'Example 2:',
       markup: '',
       info: '',
       meta: null,
       block: false,
       hidden: false } ],
  content: 'Example 2:',
  markup: '',
  info: '',
  meta: null,
  block: true,
  hidden: false }
Token {
  type: 'paragraph_close',
  tag: 'p',
  attrs: null,
  map: null,
  nesting: -1,
  level: 0,
  children: null,
  content: '',
  markup: '',
  info: '',
  meta: null,
  block: true,
  hidden: false }
Token {
  type: 'paragraph_open',
  tag: 'p',
  attrs: null,
  map: [ 17, 19 ],
  nesting: 1,
  level: 0,
  children: null,
  content: '',
  markup: '',
  info: '',
  meta: null,
  block: true,
  hidden: false }
Token {
  type: 'inline',
  tag: '',
  attrs: null,
  map: [ 17, 19 ],
  nesting: 0,
  level: 1,
  children: 
   [ Token {
       type: 'text',
       tag: '',
       attrs: null,
       map: null,
       nesting: 0,
       level: 0,
       children: null,
       content: 'Input: [3,3,7,7,10,11,11]',
       markup: '',
       info: '',
       meta: null,
       block: false,
       hidden: false },
     Token {
       type: 'softbreak',
       tag: 'br',
       attrs: null,
       map: null,
       nesting: 0,
       level: 0,
       children: null,
       content: '',
       markup: '',
       info: '',
       meta: null,
       block: false,
       hidden: false },
     Token {
       type: 'text',
       tag: '',
       attrs: null,
       map: null,
       nesting: 0,
       level: 0,
       children: null,
       content: 'Output: 10',
       markup: '',
       info: '',
       meta: null,
       block: false,
       hidden: false } ],
  content: 'Input: [3,3,7,7,10,11,11]\nOutput: 10',
  markup: '',
  info: '',
  meta: null,
  block: true,
  hidden: false }
Token {
  type: 'paragraph_close',
  tag: 'p',
  attrs: null,
  map: null,
  nesting: -1,
  level: 0,
  children: null,
  content: '',
  markup: '',
  info: '',
  meta: null,
  block: true,
  hidden: false }
Token {
  type: 'paragraph_open',
  tag: 'p',
  attrs: null,
  map: [ 22, 24 ],
  nesting: 1,
  level: 0,
  children: null,
  content: '',
  markup: '',
  info: '',
  meta: null,
  block: true,
  hidden: false }
Token {
  type: 'inline',
  tag: '',
  attrs: null,
  map: [ 22, 24 ],
  nesting: 0,
  level: 1,
  children: 
   [ Token {
       type: 'text',
       tag: '',
       attrs: null,
       map: null,
       nesting: 0,
       level: 0,
       children: null,
       content: 'Note:',
       markup: '',
       info: '',
       meta: null,
       block: false,
       hidden: false },
     Token {
       type: 'softbreak',
       tag: 'br',
       attrs: null,
       map: null,
       nesting: 0,
       level: 0,
       children: null,
       content: '',
       markup: '',
       info: '',
       meta: null,
       block: false,
       hidden: false },
     Token {
       type: 'text',
       tag: '',
       attrs: null,
       map: null,
       nesting: 0,
       level: 0,
       children: null,
       content: 'Your solution should run in O(log n) time and O(1) space.',
       markup: '',
       info: '',
       meta: null,
       block: false,
       hidden: false } ],
  content: 'Note:\nYour solution should run in O(log n) time and O(1) space.',
  markup: '',
  info: '',
  meta: null,
  block: true,
  hidden: false }
Token {
  type: 'paragraph_close',
  tag: 'p',
  attrs: null,
  map: null,
  nesting: -1,
  level: 0,
  children: null,
  content: '',
  markup: '',
  info: '',
  meta: null,
  block: true,
  hidden: false }
Token {
  type: 'paragraph_open',
  tag: 'p',
  attrs: null,
  map: [ 27, 28 ],
  nesting: 1,
  level: 0,
  children: null,
  content: '',
  markup: '',
  info: '',
  meta: null,
  block: true,
  hidden: false }
Token {
  type: 'inline',
  tag: '',
  attrs: null,
  map: [ 27, 28 ],
  nesting: 0,
  level: 1,
  children: 
   [ Token {
       type: 'text',
       tag: '',
       attrs: null,
       map: null,
       nesting: 0,
       level: 0,
       children: null,
       content: '==============================',
       markup: '',
       info: '',
       meta: null,
       block: false,
       hidden: false } ],
  content: '==============================',
  markup: '',
  info: '',
  meta: null,
  block: true,
  hidden: false }
Token {
  type: 'paragraph_close',
  tag: 'p',
  attrs: null,
  map: null,
  nesting: -1,
  level: 0,
  children: null,
  content: '',
  markup: '',
  info: '',
  meta: null,
  block: true,
  hidden: false }
Token {
  type: 'heading_open',
  tag: 'h2',
  attrs: null,
  map: [ 29, 31 ],
  nesting: 1,
  level: 0,
  children: null,
  content: '',
  markup: '-',
  info: '',
  meta: null,
  block: true,
  hidden: false }
Token {
  type: 'inline',
  tag: '',
  attrs: null,
  map: [ 29, 30 ],
  nesting: 0,
  level: 1,
  children: 
   [ Token {
       type: 'text',
       tag: '',
       attrs: null,
       map: null,
       nesting: 0,
       level: 0,
       children: null,
       content: 'Coin Change 2',
       markup: '',
       info: '',
       meta: null,
       block: false,
       hidden: false } ],
  content: 'Coin Change 2',
  markup: '',
  info: '',
  meta: null,
  block: true,
  hidden: false }
Token {
  type: 'heading_close',
  tag: 'h2',
  attrs: null,
  map: null,
  nesting: -1,
  level: 0,
  children: null,
  content: '',
  markup: '-',
  info: '',
  meta: null,
  block: true,
  hidden: false }
Token {
  type: 'paragraph_open',
  tag: 'p',
  attrs: null,
  map: [ 33, 34 ],
  nesting: 1,
  level: 0,
  children: null,
  content: '',
  markup: '',
  info: '',
  meta: null,
  block: true,
  hidden: false }
Token {
  type: 'inline',
  tag: '',
  attrs: null,
  map: [ 33, 34 ],
  nesting: 0,
  level: 1,
  children: 
   [ Token {
       type: 'text',
       tag: '',
       attrs: null,
       map: null,
       nesting: 0,
       level: 0,
       children: null,
       content: 'You are given coins of different denominations and a total amount of money. Write a function to compute the number of combinations that make up that amount. You may assume that you have infinite number of each kind of coin.',
       markup: '',
       info: '',
       meta: null,
       block: false,
       hidden: false } ],
  content: 'You are given coins of different denominations and a total amount of money. Write a function to compute the number of combinations that make up that amount. You may assume that you have infinite number of each kind of coin.',
  markup: '',
  info: '',
  meta: null,
  block: true,
  hidden: false }
Token {
  type: 'paragraph_close',
  tag: 'p',
  attrs: null,
  map: null,
  nesting: -1,
  level: 0,
  children: null,
  content: '',
  markup: '',
  info: '',
  meta: null,
  block: true,
  hidden: false }
Token {
  type: 'paragraph_open',
  tag: 'p',
  attrs: null,
  map: [ 36, 38 ],
  nesting: 1,
  level: 0,
  children: null,
  content: '',
  markup: '',
  info: '',
  meta: null,
  block: true,
  hidden: false }
Token {
  type: 'inline',
  tag: '',
  attrs: null,
  map: [ 36, 38 ],
  nesting: 0,
  level: 1,
  children: 
   [ Token {
       type: 'text',
       tag: '',
       attrs: null,
       map: null,
       nesting: 0,
       level: 0,
       children: null,
       content: 'Note:',
       markup: '',
       info: '',
       meta: null,
       block: false,
       hidden: false },
     Token {
       type: 'softbreak',
       tag: 'br',
       attrs: null,
       map: null,
       nesting: 0,
       level: 0,
       children: null,
       content: '',
       markup: '',
       info: '',
       meta: null,
       block: false,
       hidden: false },
     Token {
       type: 'text',
       tag: '',
       attrs: null,
       map: null,
       nesting: 0,
       level: 0,
       children: null,
       content: 'You can assume that',
       markup: '',
       info: '',
       meta: null,
       block: false,
       hidden: false } ],
  content: 'Note: \nYou can assume that',
  markup: '',
  info: '',
  meta: null,
  block: true,
  hidden: false }
Token {
  type: 'paragraph_close',
  tag: 'p',
  attrs: null,
  map: null,
  nesting: -1,
  level: 0,
  children: null,
  content: '',
  markup: '',
  info: '',
  meta: null,
  block: true,
  hidden: false }
Token {
  type: 'paragraph_open',
  tag: 'p',
  attrs: null,
  map: [ 39, 43 ],
  nesting: 1,
  level: 0,
  children: null,
  content: '',
  markup: '',
  info: '',
  meta: null,
  block: true,
  hidden: false }
Token {
  type: 'inline',
  tag: '',
  attrs: null,
  map: [ 39, 43 ],
  nesting: 0,
  level: 1,
  children: 
   [ Token {
       type: 'text',
       tag: '',
       attrs: null,
       map: null,
       nesting: 0,
       level: 0,
       children: null,
       content: '0 <= amount <= 5000',
       markup: '',
       info: '',
       meta: null,
       block: false,
       hidden: false },
     Token {
       type: 'softbreak',
       tag: 'br',
       attrs: null,
       map: null,
       nesting: 0,
       level: 0,
       children: null,
       content: '',
       markup: '',
       info: '',
       meta: null,
       block: false,
       hidden: false },
     Token {
       type: 'text',
       tag: '',
       attrs: null,
       map: null,
       nesting: 0,
       level: 0,
       children: null,
       content: '1 <= coin <= 5000',
       markup: '',
       info: '',
       meta: null,
       block: false,
       hidden: false },
     Token {
       type: 'softbreak',
       tag: 'br',
       attrs: null,
       map: null,
       nesting: 0,
       level: 0,
       children: null,
       content: '',
       markup: '',
       info: '',
       meta: null,
       block: false,
       hidden: false },
     Token {
       type: 'text',
       tag: '',
       attrs: null,
       map: null,
       nesting: 0,
       level: 0,
       children: null,
       content: 'the number of coins is less than 500',
       markup: '',
       info: '',
       meta: null,
       block: false,
       hidden: false },
     Token {
       type: 'softbreak',
       tag: 'br',
       attrs: null,
       map: null,
       nesting: 0,
       level: 0,
       children: null,
       content: '',
       markup: '',
       info: '',
       meta: null,
       block: false,
       hidden: false },
     Token {
       type: 'text',
       tag: '',
       attrs: null,
       map: null,
       nesting: 0,
       level: 0,
       children: null,
       content: 'the answer is guaranteed to fit into signed 32-bit integer',
       markup: '',
       info: '',
       meta: null,
       block: false,
       hidden: false } ],
  content: '0 <= amount <= 5000\n 1 <= coin <= 5000\n the number of coins is less than 500 \n the answer is guaranteed to fit into signed 32-bit integer',
  markup: '',
  info: '',
  meta: null,
  block: true,
  hidden: false }
Token {
  type: 'paragraph_close',
  tag: 'p',
  attrs: null,
  map: null,
  nesting: -1,
  level: 0,
  children: null,
  content: '',
  markup: '',
  info: '',
  meta: null,
  block: true,
  hidden: false }
Token {
  type: 'paragraph_open',
  tag: 'p',
  attrs: null,
  map: [ 46, 47 ],
  nesting: 1,
  level: 0,
  children: null,
  content: '',
  markup: '',
  info: '',
  meta: null,
  block: true,
  hidden: false }
Token {
  type: 'inline',
  tag: '',
  attrs: null,
  map: [ 46, 47 ],
  nesting: 0,
  level: 1,
  children: 
   [ Token {
       type: 'text',
       tag: '',
       attrs: null,
       map: null,
       nesting: 0,
       level: 0,
       children: null,
       content: 'Example 1:',
       markup: '',
       info: '',
       meta: null,
       block: false,
       hidden: false } ],
  content: 'Example 1:',
  markup: '',
  info: '',
  meta: null,
  block: true,
  hidden: false }
Token {
  type: 'paragraph_close',
  tag: 'p',
  attrs: null,
  map: null,
  nesting: -1,
  level: 0,
  children: null,
  content: '',
  markup: '',
  info: '',
  meta: null,
  block: true,
  hidden: false }
Token {
  type: 'paragraph_open',
  tag: 'p',
  attrs: null,
  map: [ 48, 55 ],
  nesting: 1,
  level: 0,
  children: null,
  content: '',
  markup: '',
  info: '',
  meta: null,
  block: true,
  hidden: false }
Token {
  type: 'inline',
  tag: '',
  attrs: null,
  map: [ 48, 55 ],
  nesting: 0,
  level: 1,
  children: 
   [ Token {
       type: 'text',
       tag: '',
       attrs: null,
       map: null,
       nesting: 0,
       level: 0,
       children: null,
       content: 'Input: amount = 5, coins = [1, 2, 5]',
       markup: '',
       info: '',
       meta: null,
       block: false,
       hidden: false },
     Token {
       type: 'softbreak',
       tag: 'br',
       attrs: null,
       map: null,
       nesting: 0,
       level: 0,
       children: null,
       content: '',
       markup: '',
       info: '',
       meta: null,
       block: false,
       hidden: false },
     Token {
       type: 'text',
       tag: '',
       attrs: null,
       map: null,
       nesting: 0,
       level: 0,
       children: null,
       content: 'Output: 4',
       markup: '',
       info: '',
       meta: null,
       block: false,
       hidden: false },
     Token {
       type: 'softbreak',
       tag: 'br',
       attrs: null,
       map: null,
       nesting: 0,
       level: 0,
       children: null,
       content: '',
       markup: '',
       info: '',
       meta: null,
       block: false,
       hidden: false },
     Token {
       type: 'text',
       tag: '',
       attrs: null,
       map: null,
       nesting: 0,
       level: 0,
       children: null,
       content: 'Explanation: there are four ways to make up the amount:',
       markup: '',
       info: '',
       meta: null,
       block: false,
       hidden: false },
     Token {
       type: 'softbreak',
       tag: 'br',
       attrs: null,
       map: null,
       nesting: 0,
       level: 0,
       children: null,
       content: '',
       markup: '',
       info: '',
       meta: null,
       block: false,
       hidden: false },
     Token {
       type: 'text',
       tag: '',
       attrs: null,
       map: null,
       nesting: 0,
       level: 0,
       children: null,
       content: '5=5',
       markup: '',
       info: '',
       meta: null,
       block: false,
       hidden: false },
     Token {
       type: 'softbreak',
       tag: 'br',
       attrs: null,
       map: null,
       nesting: 0,
       level: 0,
       children: null,
       content: '',
       markup: '',
       info: '',
       meta: null,
       block: false,
       hidden: false },
     Token {
       type: 'text',
       tag: '',
       attrs: null,
       map: null,
       nesting: 0,
       level: 0,
       children: null,
       content: '5=2+2+1',
       markup: '',
       info: '',
       meta: null,
       block: false,
       hidden: false },
     Token {
       type: 'softbreak',
       tag: 'br',
       attrs: null,
       map: null,
       nesting: 0,
       level: 0,
       children: null,
       content: '',
       markup: '',
       info: '',
       meta: null,
       block: false,
       hidden: false },
     Token {
       type: 'text',
       tag: '',
       attrs: null,
       map: null,
       nesting: 0,
       level: 0,
       children: null,
       content: '5=2+1+1+1',
       markup: '',
       info: '',
       meta: null,
       block: false,
       hidden: false },
     Token {
       type: 'softbreak',
       tag: 'br',
       attrs: null,
       map: null,
       nesting: 0,
       level: 0,
       children: null,
       content: '',
       markup: '',
       info: '',
       meta: null,
       block: false,
       hidden: false },
     Token {
       type: 'text',
       tag: '',
       attrs: null,
       map: null,
       nesting: 0,
       level: 0,
       children: null,
       content: '5=1+1+1+1+1',
       markup: '',
       info: '',
       meta: null,
       block: false,
       hidden: false } ],
  content: 'Input: amount = 5, coins = [1, 2, 5]\nOutput: 4\nExplanation: there are four ways to make up the amount:\n5=5\n5=2+2+1\n5=2+1+1+1\n5=1+1+1+1+1',
  markup: '',
  info: '',
  meta: null,
  block: true,
  hidden: false }
Token {
  type: 'paragraph_close',
  tag: 'p',
  attrs: null,
  map: null,
  nesting: -1,
  level: 0,
  children: null,
  content: '',
  markup: '',
  info: '',
  meta: null,
  block: true,
  hidden: false }
Token {
  type: 'paragraph_open',
  tag: 'p',
  attrs: null,
  map: [ 57, 58 ],
  nesting: 1,
  level: 0,
  children: null,
  content: '',
  markup: '',
  info: '',
  meta: null,
  block: true,
  hidden: false }
Token {
  type: 'inline',
  tag: '',
  attrs: null,
  map: [ 57, 58 ],
  nesting: 0,
  level: 1,
  children: 
   [ Token {
       type: 'text',
       tag: '',
       attrs: null,
       map: null,
       nesting: 0,
       level: 0,
       children: null,
       content: 'Example 2:',
       markup: '',
       info: '',
       meta: null,
       block: false,
       hidden: false } ],
  content: 'Example 2:',
  markup: '',
  info: '',
  meta: null,
  block: true,
  hidden: false }
Token {
  type: 'paragraph_close',
  tag: 'p',
  attrs: null,
  map: null,
  nesting: -1,
  level: 0,
  children: null,
  content: '',
  markup: '',
  info: '',
  meta: null,
  block: true,
  hidden: false }
Token {
  type: 'paragraph_open',
  tag: 'p',
  attrs: null,
  map: [ 59, 62 ],
  nesting: 1,
  level: 0,
  children: null,
  content: '',
  markup: '',
  info: '',
  meta: null,
  block: true,
  hidden: false }
Token {
  type: 'inline',
  tag: '',
  attrs: null,
  map: [ 59, 62 ],
  nesting: 0,
  level: 1,
  children: 
   [ Token {
       type: 'text',
       tag: '',
       attrs: null,
       map: null,
       nesting: 0,
       level: 0,
       children: null,
       content: 'Input: amount = 3, coins = [2]',
       markup: '',
       info: '',
       meta: null,
       block: false,
       hidden: false },
     Token {
       type: 'softbreak',
       tag: 'br',
       attrs: null,
       map: null,
       nesting: 0,
       level: 0,
       children: null,
       content: '',
       markup: '',
       info: '',
       meta: null,
       block: false,
       hidden: false },
     Token {
       type: 'text',
       tag: '',
       attrs: null,
       map: null,
       nesting: 0,
       level: 0,
       children: null,
       content: 'Output: 0',
       markup: '',
       info: '',
       meta: null,
       block: false,
       hidden: false },
     Token {
       type: 'softbreak',
       tag: 'br',
       attrs: null,
       map: null,
       nesting: 0,
       level: 0,
       children: null,
       content: '',
       markup: '',
       info: '',
       meta: null,
       block: false,
       hidden: false },
     Token {
       type: 'text',
       tag: '',
       attrs: null,
       map: null,
       nesting: 0,
       level: 0,
       children: null,
       content: 'Explanation: the amount of 3 cannot be made up just with coins of 2.',
       markup: '',
       info: '',
       meta: null,
       block: false,
       hidden: false } ],
  content: 'Input: amount = 3, coins = [2]\nOutput: 0\nExplanation: the amount of 3 cannot be made up just with coins of 2.',
  markup: '',
  info: '',
  meta: null,
  block: true,
  hidden: false }
Token {
  type: 'paragraph_close',
  tag: 'p',
  attrs: null,
  map: null,
  nesting: -1,
  level: 0,
  children: null,
  content: '',
  markup: '',
  info: '',
  meta: null,
  block: true,
  hidden: false }
Token {
  type: 'paragraph_open',
  tag: 'p',
  attrs: null,
  map: [ 64, 65 ],
  nesting: 1,
  level: 0,
  children: null,
  content: '',
  markup: '',
  info: '',
  meta: null,
  block: true,
  hidden: false }
Token {
  type: 'inline',
  tag: '',
  attrs: null,
  map: [ 64, 65 ],
  nesting: 0,
  level: 1,
  children: 
   [ Token {
       type: 'text',
       tag: '',
       attrs: null,
       map: null,
       nesting: 0,
       level: 0,
       children: null,
       content: 'Example 3:',
       markup: '',
       info: '',
       meta: null,
       block: false,
       hidden: false } ],
  content: 'Example 3:',
  markup: '',
  info: '',
  meta: null,
  block: true,
  hidden: false }
Token {
  type: 'paragraph_close',
  tag: 'p',
  attrs: null,
  map: null,
  nesting: -1,
  level: 0,
  children: null,
  content: '',
  markup: '',
  info: '',
  meta: null,
  block: true,
  hidden: false }
Token {
  type: 'paragraph_open',
  tag: 'p',
  attrs: null,
  map: [ 66, 68 ],
  nesting: 1,
  level: 0,
  children: null,
  content: '',
  markup: '',
  info: '',
  meta: null,
  block: true,
  hidden: false }
Token {
  type: 'inline',
  tag: '',
  attrs: null,
  map: [ 66, 68 ],
  nesting: 0,
  level: 1,
  children: 
   [ Token {
       type: 'text',
       tag: '',
       attrs: null,
       map: null,
       nesting: 0,
       level: 0,
       children: null,
       content: 'Input: amount = 10, coins = [10]',
       markup: '',
       info: '',
       meta: null,
       block: false,
       hidden: false },
     Token {
       type: 'softbreak',
       tag: 'br',
       attrs: null,
       map: null,
       nesting: 0,
       level: 0,
       children: null,
       content: '',
       markup: '',
       info: '',
       meta: null,
       block: false,
       hidden: false },
     Token {
       type: 'text',
       tag: '',
       attrs: null,
       map: null,
       nesting: 0,
       level: 0,
       children: null,
       content: 'Output: 1',
       markup: '',
       info: '',
       meta: null,
       block: false,
       hidden: false } ],
  content: 'Input: amount = 10, coins = [10] \nOutput: 1',
  markup: '',
  info: '',
  meta: null,
  block: true,
  hidden: false }
Token {
  type: 'paragraph_close',
  tag: 'p',
  attrs: null,
  map: null,
  nesting: -1,
  level: 0,
  children: null,
  content: '',
  markup: '',
  info: '',
  meta: null,
  block: true,
  hidden: false }
Token {
  type: 'paragraph_open',
  tag: 'p',
  attrs: null,
  map: [ 71, 72 ],
  nesting: 1,
  level: 0,
  children: null,
  content: '',
  markup: '',
  info: '',
  meta: null,
  block: true,
  hidden: false }
Token {
  type: 'inline',
  tag: '',
  attrs: null,
  map: [ 71, 72 ],
  nesting: 0,
  level: 1,
  children: 
   [ Token {
       type: 'text',
       tag: '',
       attrs: null,
       map: null,
       nesting: 0,
       level: 0,
       children: null,
       content: '==============================',
       markup: '',
       info: '',
       meta: null,
       block: false,
       hidden: false } ],
  content: '==============================',
  markup: '',
  info: '',
  meta: null,
  block: true,
  hidden: false }
Token {
  type: 'paragraph_close',
  tag: 'p',
  attrs: null,
  map: null,
  nesting: -1,
  level: 0,
  children: null,
  content: '',
  markup: '',
  info: '',
  meta: null,
  block: true,
  hidden: false }
